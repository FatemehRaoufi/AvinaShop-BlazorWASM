@using AvinaShop.Utility
@using AvinaShop.Services

@inherits LayoutComponentBase

@inject AuthenticationStateProvider _authenticationStateProvider
@inject LoadingService _loadingService
<div class="page">
    <AuthorizeView Roles="@AppConstants.Role_Admin">
        <div class="sidebar">
            <NavBarAdmin />
        </div>
    </AuthorizeView>

    <main>
        @if (_navBarVisible)
        {
            <NavBar></NavBar>
        }
        @Body

    </main>
</div>

<!-- Loading spinner component to show processing state -->
<LoadingSpinner />

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@* Loading spinner component to show processing state *@

@code {
    private bool _navBarVisible;
    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _navBarVisible = await ShowNavBar();
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!authenticated)
        {
            return true;
        }

        //Navbar should not be displayed to admin user
        if (!user.IsInRole(AppConstants.Role_Admin))
        {
            return true;
        }
        return false;
    }
}